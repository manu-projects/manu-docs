#+TITLE: Guia Frontend Tecnologías
#+SETUPFILE: ../theme-readtheorg.setup
#+EXPORT_FILE_NAME: ../../views/guia-desarrollo-web/frontend-tecnologias.html
* Live Servers
** Eleventy
*** Comandos
    #+BEGIN_SRC shell
      # instalar
      npm install --save-dev @11ty/eleventy
    
      # compila o transpila, no se (?) a _site
      npx @11ty/eleventy
    
      # iniciar servidor
      npx @11ty/eleventy --serve
    #+END_SRC
*** Configuraciones
    #+BEGIN_SRC javascript
      module.exports = function(eleventyConfig) {
          // ADD YOUR OWN WATCH TARGETS
          // - por si agregamos fotos, .json, ...
          eleventyConfig.addWatchTarget("./assets");
          eleventyConfig.addPassthroughCopy('./assets');
      
          // OVERRIDE BROWSERSYNC SERVER OPTIONS
          eleventyConfig.setBrowserSyncConfig({
              notify: true
          });
      
          eleventyConfig.addPassthroughCopy({
              './node_modules/alpinejs/dist/cdn.js': './src/js/alpine.js',
              './node_modules/axios/dist/axios.js': './src/js/axios.js'
          });
      };
    #+END_SRC
*** Plugins
    1. [[https://www.11ty.dev/docs/plugins/image/][Image (11ty.dev)]]
*** Referencias
    1. https://www.11ty.dev/docs/getting-started/
    2. [[https://hackernoon.com/build-a-gallery-site-with-11ty-lu203zzm][Build a gallery with 11ty (hackernoon.com)]]
** Parcel
* [TODO] Gestores de Tareas
** GulpJS
*** Instalacion
   #+BEGIN_SRC shell
     # instalamos gulp globalmente
     npm install gulp-cli -g
     # -g es igual que --global

     # inicializamos
     npm init -y

     # instalamos gulp localmente, como dependencia de desarrollo
     npm install gulp -D
     # -D es igual que --save-dev

     # instalamos dependencias
     npm install --save-dev gulp-sourcemaps gulp-concat browser-sync
     npm install --save-dev gulp-terser gulp-postcss cssnano gulp-sass autoprefixer

     # browser-sync para liveserver
   #+END_SRC
*** Bibliotecas
    importantes a buscar:
    1. gulp-sourcemaps
    2. webpack-stream mezclado con gulp?

**** Servidor (Live Server)
     Podemos correr un servidor para ver los cambios en el momento desde un locahost,
     algunas bibliotecas de fácil manejo son:
     1. browser-sync
    
**** Minificar y Optimizar archivos
***** Conceptos
       1. Podemos reducir el código tanto de archivos javascript como css,
          de esta manera se demora menos segundos en cargar cada uno.
       2. Para minificar archivos javascript podemos las siguientes bibliotecas
          - gulp terser
       3. Para minificar hojas de estilos podemos usar las siguientes bibliotecas
          - nanocss
***** Gulp Terser
      - Es la nueva versión de *uglify*, sirve para ofuscar el código
      - Minimiza el código con el compatible ES6 (Ecmascript)
***** Autoprefixer
      - Es uno de los tantos plugins de [[PostCss][PostCss]]
      - Agrega los [[Prefijos Vendor][prefijos vendor]]  a las propiedades de css
      Referencias:
      1. https://github.com/postcss/autoprefixer
***** Nanocss
      - Es uno de los tantos plugins de [[PostCss][PostCss]]
      - Optimiza el tamaño del la hoja de estilos
     
      *Referencias:*
      1. https://github.com/cssnano/cssnano
**** Concatenar archivos
     Podemos utilizar la biblioteca **gulp-concat** para agrupar el código
     de varios archivos en uno solo. Particularmente útil cuando tenemos
     varios archivos de javascript u hojas de estilos que queremos unificar,
     colocando en las cabeceras de los html un solo archivo en vez de varios.
**** otros
***** Gulp Babel
      - Este el módulo que usará gulp para convertir el código a ES5 (Ecmascript)
***** PostCss
      - Herramienta con cientos de plugins que transforman estilos en css con javascript
      - Tiene cientos plugins para optimizar y mejoar el uso de las hojas de estilo
     
      *Referencias:*
      1. https://github.com/postcss/postcss
      2. https://webdesign.tutsplus.com/tutorials/postcss-quickstart-guide-instant-setup-options--cms-24536
      3. 
*** Referencias
**** Referencias Extraoficiales
     1. https://css-tricks.com/gulp-for-beginners/
     2. [[https://www.youtube.com/watch?v=ssG5mziTF3E][Gulp 4.0 Tutorial 2020 | Concat & Minify Your CSS and JS]]
** GruntJS
* [TODO] Babel
** Conceptos
** Referencias
   1. [[https://babeljs.io/setup][Setup (babeljs.io)]]
   2. [[https://www.thegeekstuff.com/2016/12/babel-for-javascript/][How to use BAbel Javascript Compiler as Transpier (thegeekstuff.com)]]
   3. [[https://calebporzio.com/using-babel-without-the-build-inline-js-ftw][Using BAbel without the build (calebporzio.com)]]
* [TODO] Lodash
** Conceptos
** Lodash FP
** Referencias
*** Referencias Oficiales
    1. https://lodash.com/docs/4.17.15
*** Referencias Extraoficiales
    1. [[https://geekyants.com/blog/composition-and-lodash-fp-195][Composition and Lodash FP]]
    2. https://www.javaguides.net/2019/06/lodash-js-tutorial-with-examples.html
    3. https://www.tutorialspoint.com/lodash/index.htm
* [TODO] Alpinejs
* [TODO] Axios
** Referencias
*** Referencias Oficiales
    1. [[https://axios-http.com/docs/intro][Getting Started (axios-http.com)]]
*** Referencias Extraoficiales
    1. [[https://www.arquitecturajava.com/axios-js-una-libreria-de-promesas/][Axios js, libreria de promesas (arquitecturajava.com)]]
